const express=require("express");
const bring=require("../../request_handler");
const router= express.Router();



const pool = require('mysql').createPool({//tuta alopos en xriazunte
  host: 'your_database_host',
  user: 'your_username',
  password: 'your_password',
  database: 'your_database_name'
});
router.use(express.json());
// Retrieve teachers who borrowed books of the selected category in the last year
router.post("/:category", async(req, res)=>{
  await bring.handleRequest(true,req,res,"got all teachers that borrowed a book and authors that wrote a certain category",//tuti i grami apla kali ti sanartisi
  async(conn)=>{//damsa en i to ti kami i funcbody ta select vasika
const teacherQuery=await conn.query (
  "SELECT DISTINCT u.user_id, u.user_name, u.user_surname" +
  "FROM users u" +
  "JOIN teacher t ON u.user_id = t.user_id" +
  "JOIN rent r ON u.user_id = r.user_id" +
  "JOIN book b ON r.isbn = b.isbn AND r.school_id = b.school_id" +
  "JOIN book_category bc ON b.isbn = bc.isbn AND b.school_id = bc.school_id" +
  "JOIN category c ON bc.category_id = c.category_id" +
  "WHERE c.category_name = ?" +
    "AND YEAR(r.date_of_rent) = YEAR(CURDATE()) - 1" +
    "GROUP BY u.user_id",
    [req.params.category]);//os dame e8kialeksen tus teachers je in mesa stin metavliti teacherquery

const authorQuery = await connection.query(
 " SELECT DISTINCT a.author_id, a.author_name, a.author_surname" +
  "FROM author a" +
  "JOIN book_author ba ON a.author_id = ba.author_id" +
  "JOIN book b ON ba.isbn = b.isbn AND ba.school_id = b.school_id" +
 " JOIN book_category bc ON b.isbn = bc.isbn AND b.school_id = bc.school_id" +
"  JOIN category c ON bc.category_id = c.category_id" +
  "WHERE c.category_name = ?" +
  "GROUP BY a.author_id",
  [req.params.category]);//to idio je dame me tus authors je to authorquery pale eshi tus authors mesa

let json_list=[];//dimiurgo lista
for(elem of teacherQuery){
json_list.push({
id: elem.user_id,
name: elem.user_name,
surname: elem.user_surname,
works_as: "teacher",
});
}//kamo push tus teachers me ta values id,name,surname,works_as

for(elem of authorQuery){
json_list.push({
id: elem.author_id,
name: elem.author_name,
surname: elem.author_surname,
works_as: "author",
});
}//to idio je dame me tus authors 
//onomasata etsi sti lista telia genika oste na ksexorizis ti ine meso to works_as
if (req.query.format == "csv") {
  const opts = {
    fields: ["id", "name", "surname","works_as"],
  };
  return new Parser(opts).parse(json_res);
} else {
  return json_res;
}
  });
  });//dame apla stelit sto web meso json file
module.exports =router;
  // Close the connection
  connection.end();






